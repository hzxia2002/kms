<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
	http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">
    <description>translate</description>
    <display-name>translate</display-name>

    <!--
     默认的spring配置文件是在WEB-INF下的applicationContext.xml
     Spring 容器启动监听器
      -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>
            classpath:applicationContext.xml
        </param-value>
    </context-param>

    <filter>
        <filter-name>hazelcast-filter</filter-name>
        <filter-class>com.hazelcast.web.WebFilter</filter-class>
        <!--
            Name of the distributed map storing
            your web session objects
        -->
        <init-param>
            <param-name>map-name</param-name>
            <param-value>my-sessions</param-value>
        </init-param>
        <!--
            How is your load-balancer configured?
            stick-session means all requests of a session
            is routed to the node where the session is first created.
            This is excellent for performance.
            If sticky-session is set to false, when a session is updated
            on a node, entry for this session on all other nodes is invalidated.
            You have to know how your load-balancer is configured before
            setting this parameter. Default is true.
        -->
        <init-param>
            <param-name>sticky-session</param-name>
            <param-value>true</param-value>
        </init-param>
        <!--
            Name of session id cookie
        -->
        <init-param>
            <param-name>cookie-name</param-name>
            <param-value>hazelcast.sessionId</param-value>
        </init-param>
        <!--
            Domain of session id cookie. Default is based on incoming request.
        -->
        <!--<init-param>-->
            <!--<param-name>cookie-domain</param-name>-->
            <!--<param-value>.mywebsite.com</param-value>-->
        <!--</init-param>-->
        <!--
            Should cookie only be sent using a secure protocol? Default is false.
        -->
        <init-param>
            <param-name>cookie-secure</param-name>
            <param-value>false</param-value>
        </init-param>
        <!--
            Should HttpOnly attribute be set on cookie ? Default is false.
        -->
        <init-param>
            <param-name>cookie-http-only</param-name>
            <param-value>false</param-value>
        </init-param>
        <!--
            Are you debugging? Default is false.
        -->
        <init-param>
            <param-name>debug</param-name>
            <param-value>true</param-value>
        </init-param>
        <!--
            Configuration xml location;
                * as servlet resource OR
                * as classpath resource OR
                * as URL
            Default is one of hazelcast-default.xml
            or hazelcast.xml in classpath.
        -->
        <!--<init-param>-->
            <!--<param-name>config-location</param-name>-->
            <!--<param-value>/WEB-INF/hazelcast.xml</param-value>-->
        <!--</init-param>-->
        <!--
            Do you want to use an existing HazelcastInstance?
            Default is null.
        -->
        <init-param>
            <param-name>instance-name</param-name>
            <param-value>default</param-value>
        </init-param>

        <!--
            Do you want to connect as a client to an existing cluster?
            Default is false.
        -->
        <init-param>
            <param-name>use-client</param-name>
            <param-value>false</param-value>
        </init-param>
        <!--
            Client configuration location;
                * as servlet resource OR
                * as classpath resource OR
                * as URL
            Default is null.
        -->
        <init-param>
            <param-name>client-config-location</param-name>
            <param-value>/WEB-INF/hazelcast-client.properties</param-value>
        </init-param>
        <!--
            Do you want to shutdown HazelcastInstance during
            web application undeploy process?
            Default is true.
        -->
        <init-param>
            <param-name>shutdown-on-destroy</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>hazelcast-filter</filter-name>
        <url-pattern>/*</url-pattern>
        <dispatcher>FORWARD</dispatcher>
        <dispatcher>INCLUDE</dispatcher>
        <dispatcher>REQUEST</dispatcher>
    </filter-mapping>

    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

    <!-- Spring 刷新Introspector防止内存泄露 -->
    <listener>
        <listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
    </listener>

    <listener>
        <listener-class>com.comet.core.listener.StartupListener</listener-class>
    </listener>

    <listener>
        <listener-class>com.comet.core.security.count.UserSessionListener</listener-class>
    </listener>

    <listener>
        <listener-class>org.springframework.security.web.session.HttpSessionEventPublisher</listener-class>
    </listener>

    <filter>
        <filter-name>encodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>

    <filter-mapping>
        <filter-name>encodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <listener>
        <listener-class>com.hazelcast.web.SessionListener</listener-class>
    </listener>

    <filter>
        <filter-name>springSecurityFilterChain</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>

    <filter-mapping>
        <filter-name>springSecurityFilterChain</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!-- Hibernate Open Session In View filter-->
    <filter>
        <filter-name>osivFilter</filter-name>
        <filter-class>org.springframework.orm.hibernate3.support.OpenSessionInViewFilter</filter-class>
    </filter>

    <filter-mapping>
        <filter-name>osivFilter</filter-name>
        <url-pattern>*.do</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>osivFilter</filter-name>
        <url-pattern>*.jsp</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>osivFilter</filter-name>
        <url-pattern>*.html</url-pattern>
    </filter-mapping>
    <!--压缩-->
    <filter>
        <filter-name>compressionFilter</filter-name>
        <filter-class>net.sf.ehcache.constructs.web.filter.GzipFilter</filter-class>
    </filter>

    <!--<filter-mapping>-->
        <!--<filter-name>compressionFilter</filter-name>-->
        <!--<url-pattern>*.html</url-pattern>-->
    <!--</filter-mapping>-->
    <filter-mapping>
        <filter-name>compressionFilter</filter-name>
        <url-pattern>*.js</url-pattern>
    </filter-mapping>
    <!--<filter-mapping>-->
        <!--<filter-name>compressionFilter</filter-name>-->
        <!--<url-pattern>*.css</url-pattern>-->
    <!--</filter-mapping>-->
    <filter-mapping>
        <filter-name>compressionFilter</filter-name>
        <url-pattern>*.do</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>compressionFilter</filter-name>
        <url-pattern>*.jsp</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>compressionFilter</filter-name>
        <url-pattern>*.json</url-pattern>
    </filter-mapping>

    <servlet>
        <servlet-name>dispatcher</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <load-on-startup>2</load-on-startup>
    </servlet>

    <servlet-mapping>
        <servlet-name>dispatcher</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>

    <!--<servlet-mapping>-->
        <!--<servlet-name>dispatcher</servlet-name>-->
        <!--<url-pattern>*.json</url-pattern>-->
    <!--</servlet-mapping>-->

    <!--<servlet-mapping>-->
        <!--<servlet-name>dispatcher</servlet-name>-->
        <!--<url-pattern>*.css</url-pattern>-->
    <!--</servlet-mapping>-->

    <!--<servlet-mapping>-->
        <!--<servlet-name>dispatcher</servlet-name>-->
        <!--<url-pattern>*.gif</url-pattern>-->
    <!--</servlet-mapping>-->

    <!--<servlet-mapping>-->
        <!--<servlet-name>dispatcher</servlet-name>-->
        <!--<url-pattern>*.jpg</url-pattern>-->
    <!--</servlet-mapping>-->

    <!--<servlet-mapping>-->
        <!--<servlet-name>dispatcher</servlet-name>-->
        <!--<url-pattern>*.js</url-pattern>-->
    <!--</servlet-mapping>-->

		<!-- web service -->
    <!--<servlet>-->
        <!--<description>Apache CXF Endpoint</description>-->
        <!--<display-name>CXFServlet</display-name>-->
        <!--<servlet-name>CXFServlet</servlet-name>-->
        <!--<servlet-class>org.apache.cxf.transport.servlet.CXFServlet</servlet-class>-->
        <!--<load-on-startup>1</load-on-startup>-->
    <!--</servlet>-->
    <!---->
    <!--<servlet-mapping>-->
        <!--<servlet-name>CXFServlet</servlet-name>-->
        <!--<url-pattern>/cxf/*</url-pattern>-->
    <!--</servlet-mapping>-->

    <welcome-file-list>
        <welcome-file>index.jsp</welcome-file>
    </welcome-file-list>

    <!-- session超时定义,单位为分钟 -->
    <!--暂定为120分钟-->
    <session-config>
        <session-timeout>120</session-timeout>
    </session-config>

    <error-page>
        <error-code>404</error-code>
        <location>/error.jsp</location>
    </error-page>

    <error-page>
        <error-code>500</error-code>
        <location>/error.jsp</location>
    </error-page>

    <error-page>
        <exception-type>java.lang.Exception</exception-type>
        <!-- Displays a stack trace -->
        <location>/error.jsp</location>
    </error-page>
</web-app>
